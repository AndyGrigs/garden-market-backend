import nodemailer from "nodemailer";
import dotenv from "dotenv";
import { verificationCodeTemplates, resetCodeTemplates, sellerApprovalTemplates } from "./emailTemplates.js";

dotenv.config();

class emailService {
  constructor() {
    this.transporter = nodemailer.createTransport({
      host: process.env.SMTP_HOST,
      port: process.env.SMTP_PORT,
      secure: true,
      auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS,
      },
      tls: {
        rejectUnauthorized: false,
      },
    });
  }

  // –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
  async testConnection() {
    try {
      await this.transporter.verify();
      console.log("‚úì SMTP —Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤–∏–π");
      return true;
    } catch (error) {
      console.error("‚úó –ü–æ–º–∏–ª–∫–∞ SMTP:", error.message);
      return false;
    }
  }
  // –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ email –∑ –∫–æ–¥–æ–º –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
  async sendVerificationCodeEmail(userEmail, userName, code, userLang = "ru") {
    try {
      const lang = ["ru", "en", "ro"].includes(userLang) ? userLang : "ru";
      const mailOptions = {
        from: `"Garden Market" <${process.env.EMAIL_USER}>`,
        to: userEmail,
        subject: {
          ru: "–í–∞—à –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è - Garden Market",
          en: "Your verification code - Garden Market",
          ro: "Codul dvs. de verificare - Garden Market",
        }[lang],
        html: verificationCodeTemplates[lang](userName, code),
      };

      const result = await this.transporter.sendMail(mailOptions);
      console.log("‚úì Verification code email –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ:", result.messageId);
      return { success: true, messageId: result.messageId };
    } catch (error) {
      console.error("‚úó –ü–æ–º–∏–ª–∫–∞ verification code email:", error);
      return { success: false, error: error.message };
    }
  }

  async sendResetCodeEmail(userEmail, userName, code, userLang = "ru") {
    const lang = ["ru", "ro", "en"].includes(userLang) ? userLang : "ru";
    const mailOptions = {
      from: `"Garden Market" <${process.env.EMAIL_USER}>`,
      to: userEmail,
      subject: {
        en: "Password reset code - Garden Market",
        ru: "–ö–æ–¥ –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è - Garden Market",
        ro: "Cod de resetare a parolei - Garden Market",
      }[lang],
      html: resetCodeTemplates[lang](userName, code),
    };
    return await this.transporter.sendMail(mailOptions);
  }

  async sendSellerApprovalEmail(userEmail, data, userLang = "ru") {
    try {
      const lang = ["ru", "ro"].includes(userLang) ? userLang : "ru";
      const mailOptions = {
        from: `"Garden Market" <${process.env.EMAIL_USER}>`,
        to: userEmail,
        subject: {
          ru: "‚úÖ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –ø—Ä–æ–¥–∞–≤—Ü–∞ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω - Garden Market",
          ro: "‚úÖ Contul dvs. de v√¢nzƒÉtor a fost aprobat - Garden Market",
        }[lang],
        html: sellerApprovalTemplates[lang](data),
      };

      const result = await this.transporter.sendMail(mailOptions);
      console.log("‚úÖ Seller approval email sent:", result.messageId);
      return { success: true, messageId: result.messageId };
    } catch (error) {
      console.error("‚ùå Error sending seller approval email:", error);
      return { success: false, error: error.message };
    }
  }

  async sendAdminNotificationEmail(adminEmail, notificationType, data) {
    try {
      let subject, htmlContent;

      switch (notificationType) {
        case "new_seller_registration":
          subject = `üîî –ù–æ–≤–∏–π –ø—Ä–æ–¥–∞–≤–µ—Ü—å –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞–≤—Å—è - ${data.fullName}`;
          htmlContent = `
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <title>–ù–æ–≤–∏–π –ø—Ä–æ–¥–∞–≤–µ—Ü—å</title>
            <style>
              body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
              .container { max-width: 600px; margin: 0 auto; padding: 20px; }
              .header { background: #059669; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }
              .content { background: #f8f9fa; padding: 30px; border: 1px solid #e9ecef; }
              .info-box { background: white; padding: 20px; margin: 20px 0; border-left: 4px solid #059669; border-radius: 4px; }
              .btn { display: inline-block; background: #059669; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; margin: 10px 0; }
              .footer { background: #6b7280; color: white; padding: 15px; text-align: center; border-radius: 0 0 8px 8px; font-size: 14px; }
              .urgent { color: #dc2626; font-weight: bold; }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="header">
                <h1>üå≥ –ù–æ–≤–∏–π –ø—Ä–æ–¥–∞–≤–µ—Ü—å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ñ!</h1>
              </div>
              
              <div class="content">
                <h2>–î–µ—Ç–∞–ª—ñ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó:</h2>
                
                <div class="info-box">
                  <p><strong>üë§ –Ü–º'—è:</strong> ${data.fullName}</p>
                  <p><strong>üìß Email:</strong> ${data.email}</p>
                  <p><strong>üè™ –†–æ–∑—Å–∞–¥–Ω–∏–∫:</strong> ${
                    data.sellerInfo?.nurseryName || "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"
                  }</p>
                  <p><strong>üì± –¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${
                    data.sellerInfo?.phoneNumber || "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"
                  }</p>
                  <p><strong>üìç –ê–¥—Ä–µ—Å–∞:</strong> ${
                    data.sellerInfo?.address || "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"
                  }</p>
                  <p><strong>üìÑ –õ—ñ—Ü–µ–Ω–∑—ñ—è:</strong> ${
                    data.sellerInfo?.businessLicense || "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"
                  }</p>
                  ${
                    data.sellerInfo?.description
                      ? `<p><strong>üìù –û–ø–∏—Å:</strong> ${data.sellerInfo.description}</p>`
                      : ""
                  }
                </div>

                <div class="info-box urgent">
                  <p><strong>‚ö†Ô∏è –ü–æ—Ç—Ä—ñ–±–Ω—ñ –¥—ñ—ó:</strong></p>
                  <ul>
                    <li>–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø—Ä–æ–¥–∞–≤—Ü—è</li>
                    <li>–°—Ö–≤–∞–ª–∏—Ç–∏ –∞–±–æ –≤—ñ–¥—Ö–∏–ª–∏—Ç–∏ –∑–∞—è–≤–∫—É</li>
                    <li>–ü—Ä–∏ —Å—Ö–≤–∞–ª–µ–Ω–Ω—ñ - –∞–∫—Ç–∏–≤—É–≤–∞—Ç–∏ –∞–∫–∞—É–Ω—Ç –ø—Ä–æ–¥–∞–≤—Ü—è</li>
                  </ul>
                </div>

                <div style="text-align: center; margin: 30px 0;">
                  <a href="${process.env.FRONTEND_URL}/admin" class="btn">
                    üîó –ü–µ—Ä–µ–π—Ç–∏ –≤ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å
                  </a>
                </div>
              </div>

              <div class="footer">
                <p>Garden Market Admin System | ${new Date().toLocaleDateString(
                  "uk-UA"
                )}</p>
                <p>–¶–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è. –ù–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ –Ω–∞ —Ü–µ–π email.</p>
              </div>
            </div>
          </body>
          </html>
        `;
          break;

        case "new_product_created":
          subject = `üå≥ –ù–æ–≤–∏–π —Ç–æ–≤–∞—Ä –ø–æ—Ç—Ä–µ–±—É—î –ø–µ—Ä–µ–∫–ª–∞–¥—É - ${data.productName}`;
          htmlContent = `
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <title>–ù–æ–≤–∏–π —Ç–æ–≤–∞—Ä</title>
            <style>
              body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
              .container { max-width: 600px; margin: 0 auto; padding: 20px; }
              .header { background: #059669; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }
              .content { background: #f8f9fa; padding: 30px; border: 1px solid #e9ecef; }
              .info-box { background: white; padding: 20px; margin: 20px 0; border-left: 4px solid #f59e0b; border-radius: 4px; }
              .btn { display: inline-block; background: #f59e0b; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; margin: 10px 0; }
              .footer { background: #6b7280; color: white; padding: 15px; text-align: center; border-radius: 0 0 8px 8px; font-size: 14px; }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="header">
                <h1>üìù –ü–æ—Ç—Ä—ñ–±–µ–Ω –ø–µ—Ä–µ–∫–ª–∞–¥ —Ç–æ–≤–∞—Ä—É!</h1>
              </div>
              
              <div class="content">
                <div class="info-box">
                  <p><strong>üå≥ –¢–æ–≤–∞—Ä:</strong> ${data.productName}</p>
                  <p><strong>üí∞ –¶—ñ–Ω–∞:</strong> ${data.price} –≥—Ä–Ω</p>
                  <p><strong>üë§ –ü—Ä–æ–¥–∞–≤–µ—Ü—å:</strong> ${
                    data.sellerInfo?.fullName
                  }</p>
                  <p><strong>üè™ –†–æ–∑—Å–∞–¥–Ω–∏–∫:</strong> ${
                    data.sellerInfo?.nurseryName
                  }</p>
                  <p><strong>üìÖ –°—Ç–≤–æ—Ä–µ–Ω–æ:</strong> ${new Date().toLocaleDateString(
                    "uk-UA"
                  )}</p>
                </div>

                <div class="info-box">
                  <p><strong>‚ö†Ô∏è –ü–æ—Ç—Ä—ñ–±–Ω—ñ –ø–µ—Ä–µ–∫–ª–∞–¥–∏:</strong></p>
                  <ul>
                    <li>üá¨üáß –ê–Ω–≥–ª—ñ–π—Å—å–∫–æ—é –º–æ–≤–æ—é</li>
                    <li>üá∑üá¥ –†—É–º—É–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é</li>
                  </ul>
                  <p><em>–¢–æ–≤–∞—Ä –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π –ø–æ–∫—É–ø—Ü—è–º –ø—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø–µ—Ä–µ–∫–ª–∞–¥—ñ–≤.</em></p>
                </div>

                <div style="text-align: center; margin: 30px 0;">
                  <a href="${process.env.FRONTEND_URL}/admin" class="btn">
                    üîó –î–æ–¥–∞—Ç–∏ –ø–µ—Ä–µ–∫–ª–∞–¥–∏
                  </a>
                </div>
              </div>

              <div class="footer">
                <p>Garden Market Admin System | ${new Date().toLocaleDateString(
                  "uk-UA"
                )}</p>
                <p>–¶–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è. –ù–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ –Ω–∞ —Ü–µ–π email.</p>
              </div>
            </div>
          </body>
          </html>
        `;
          break;

        default:
          subject = "üîî –ù–æ–≤–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∑ Garden Market";
          htmlContent = `
          <h2>–ù–æ–≤–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è</h2>
          <p>${data.message || "–£ –≤–∞—Å —î –Ω–æ–≤–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ."}</p>
          <p><a href="${
            process.env.FRONTEND_URL
          }/admin">–ü–µ—Ä–µ–π—Ç–∏ –≤ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å</a></p>
        `;
      }

      const mailOptions = {
        from: {
          name: "Garden Market System",
          address: this.transporter.options.auth.user,
        },
        to: adminEmail,
        subject: subject,
        html: htmlContent,
      };

      const info = await this.transporter.sendMail(mailOptions);
      console.log("‚úÖ Admin notification email sent:", info.messageId);

      return {
        success: true,
        messageId: info.messageId,
        to: adminEmail,
        subject: subject,
      };
    } catch (error) {
      console.error("‚ùå Error sending admin notification email:", error);
      throw error;
    }
  }

  generateVerificationCode() {
    return Math.floor(100 + Math.random() * 900).toString();
  }
}

export default emailService;
